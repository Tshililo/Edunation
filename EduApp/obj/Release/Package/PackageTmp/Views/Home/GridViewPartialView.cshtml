@using DevExpress.Web;
@using DevExpress.Web.Mvc;
@using EduApp.Helpers;
@Html.DevExpress().GridView(
	settings =>
	{

		settings.Name = "ApplicationGridViewPartial";

		settings.CallbackRouteValues = new { Controller = "Home", Action = "ApplicationsGridViewPartial" };
		settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "ApplicationsEdit" };
		settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "ApplicationsEdit" };
		settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "ApplicationsDelete" };

		#region Properties
		settings.Width = Unit.Percentage(100);
		Html.PalBrokerHtml().GridView.GridDefaultBehavior(settings, "ApplicationGridViewPartial");
		settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
		settings.SettingsPager.PageSize = 15;
		settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;

		settings.CommandColumn.Visible = true;
		settings.CommandColumn.ShowSelectCheckbox = true;
		//   settings.CommandColumn.Width = 40;
		settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;

		//  settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;

		settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
		settings.Settings.VerticalScrollableHeight = 220;

		settings.SettingsPager.PageSizeItemSettings.Visible = true;
		settings.SettingsPager.AlwaysShowPager = true;

		settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm; // POPUP EDIT FORM
		settings.SettingsPopup.EditForm.Modal = true;
		settings.SettingsBehavior.ConfirmDelete = false;


		settings.SettingsPopup.EditForm.Width = Unit.Pixel(700);
		//settings.SettingsPopup.EditForm.Height = Unit.Pixel(1500);
		settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
		settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.Center;
		settings.SettingsPopup.EditForm.ShowHeader = true;

		settings.SettingsBehavior.AllowSelectSingleRowOnly = false; // radio button when true checkbox hen false
																	//settings.SettingsBehavior.AllowSelectByRowClick = false;
		settings.SettingsBehavior.AllowFocusedRow = true;
		//  settings.ClientSideEvents.ColumnResized = "HighlightEllipsis";
		settings.SettingsBehavior.AllowEllipsisInText = true;
		#endregion

		settings.KeyFieldName = "ObjId";


		settings.BeforeGetCallbackResult = (s, e) =>

		{
			var gridView = s as MVCxGridView;

			var doc = gridView.EditingRowVisibleIndex > 0 ? gridView.GetRowValues(gridView.EditingRowVisibleIndex, "ObjId").ToString() : "";
			gridView.SettingsText.PopupEditFormCaption = "Edit : " + doc;

			if (gridView.IsNewRowEditing)
			{
				gridView.SettingsText.PopupEditFormCaption = "New Profile";

			}
		};

		settings.SetEditFormTemplateContent(c =>
		{

			ViewContext.Writer.Write((Html.Action("ApplicationsUpdateEntryToForm", new { ObjId = c.KeyValue != null ? c.KeyValue.ToString() : Guid.NewGuid().ToString() }).ToHtmlString()));
		});

		settings.ClientSideEvents.FocusedRowChanged = "OnApplicationHeaderGridFocusedRowChanged";
		settings.ClientSideEvents.Init = "function(s, e) { s.PerformCallback(); }";
		settings.ClientSideEvents.EndCallback = "InitialSetFocus";

		settings.Columns.Add(column => { column.FieldName = "IdNo"; column.Caption = "Id No."; column.Width = Unit.Pixel(120); });
		settings.Columns.Add(column => { column.FieldName = "Name"; column.Caption = "Name"; column.Width = Unit.Pixel(100); });
		settings.Columns.Add(column => { column.FieldName = "Gender"; column.Caption = "Gender"; column.Width = Unit.Pixel(100); });
		settings.Columns.Add(column => { column.FieldName = "PhoneNumber"; column.Caption = "Phone Number"; column.Width = Unit.Pixel(100); });

		settings.Columns.Add(column => { column.FieldName = "Email"; column.Caption = "Email"; column.Width = Unit.Pixel(100); });



		settings.FormatConditions.AddTopBottom(c =>
		{
			c.FieldName = "Amount";
			c.Rule = GridTopBottomRule.BottomPercent;
			//   c.Threshold = 20;
			c.Format = GridConditionHighlightFormat.RedText;
		});


		settings.Settings.ShowHeaderFilterButton = true;
		settings.SettingsPopup.HeaderFilter.Height = 250;
		var headerFilterMode = GridHeaderFilterMode.CheckedList;
		foreach (GridViewDataColumn column in settings.Columns)
			column.SettingsHeaderFilter.Mode = headerFilterMode;

	}).SetEditErrorText(ViewData["EditError"] != null ? (string)ViewData["EditError"] : string.Empty).Bind(Model).GetHtml()